module TwEmojiData :sig

  val is-color : int -> bool
  val is-person : int -> bool
  val is-alphabet : int -> bool
  val is-national-flag : int -> int -> bool
  val is-square : int -> bool
  val is-square-symbol : int -> int -> bool
  val is-black-flag : int -> bool
  val is-area-flag : (int*int*int*int*int*int) -> bool
  val is-ZWJ : int list -> bool
  val is-variation-selectors : int list -> bool

end = struct

let is-color n =
  match n with
  | 0x1F3FB -> true
  | 0x1F3FC -> true
  | 0x1F3FD -> true
  | 0x1F3FE -> true
  | 0x1F3FF -> true
  | _       -> false


let is-person n =
  match n with
  | 0x1F385 -> true
  | 0x1F3C2 -> true
  | 0x1F3C3 -> true
  | 0x1F3C3 -> true
  | 0x1F3C4 -> true
  | 0x1F3C7 -> true
  | 0x1F3CA -> true
  | 0x1F3CB -> true
  | 0x1F3CC -> true
  | 0x1F442 -> true
  | 0x1F443 -> true
  | 0x1F446 -> true
  | 0x1F447 -> true
  | 0x1F448 -> true
  | 0x1F449 -> true
  | 0x1F44A -> true
  | 0x1F44B -> true
  | 0x1F44C -> true
  | 0x1F44D -> true
  | 0x1F44E -> true
  | 0x1F44F -> true
  | 0x1F450 -> true
  | 0x1F466 -> true
  | 0x1F467 -> true
  | 0x1F468 -> true
  | 0x1F469 -> true
  | 0x1F46B -> true
  | 0x1F46C -> true
  | 0x1F46D -> true
  | 0x1F46E -> true
  | 0x1F46F -> true
  | 0x1F470 -> true
  | 0x1F471 -> true
  | 0x1F472 -> true
  | 0x1F473 -> true
  | 0x1F474 -> true
  | 0x1F475 -> true
  | 0x1F476 -> true
  | 0x1F477 -> true
  | 0x1F478 -> true
  | 0x1F47C -> true
  | 0x1F481 -> true
  | 0x1F482 -> true
  | 0x1F483 -> true
  | 0x1F485 -> true
  | 0x1F486 -> true
  | 0x1F487 -> true
  | 0x1F4AA -> true
  | 0x1F574 -> true
  | 0x1F575 -> true
  | 0x1F57A -> true
  | 0x1F590 -> true
  | 0x1F595 -> true
  | 0x1F596 -> true
  | 0x1F645 -> true
  | 0x1F646 -> true
  | 0x1F647 -> true
  | 0x1F64B -> true
  | 0x1F64C -> true
  | 0x1F64D -> true
  | 0x1F64E -> true
  | 0x1F64F -> true
  | 0x1F6A3 -> true
  | 0x1F6B4 -> true
  | 0x1F6B5 -> true
  | 0x1F6B6 -> true
  | 0x1F6C0 -> true
  | 0x1F6CC -> true
  | 0x1F90F -> true
  | 0x1F918 -> true
  | 0x1F919 -> true
  | 0x1F91A -> true
  | 0x1F91B -> true
  | 0x1F91C -> true
  | 0x1F91D -> true
  | 0x1F91E -> true
  | 0x1F91F -> true
  | 0x1F926 -> true
  | 0x1F930 -> true
  | 0x1F931 -> true
  | 0x1F932 -> true
  | 0x1F933 -> true
  | 0x1F934 -> true
  | 0x1F935 -> true
  | 0x1F936 -> true
  | 0x1F937 -> true
  | 0x1F938 -> true
  | 0x1F939 -> true
  | 0x1F93D -> true
  | 0x1F93E -> true
  | 0x1F9B5 -> true
  | 0x1F9B6 -> true
  | 0x1F9B8 -> true
  | 0x1F9B9 -> true
  | 0x1F9BB -> true
  | 0x1F9CD -> true
  | 0x1F9CE -> true
  | 0x1F9CF -> true
  | 0x1F9D1 -> true
  | 0x1F9D2 -> true
  | 0x1F9D3 -> true
  | 0x1F9D4 -> true
  | 0x1F9D5 -> true
  | 0x1F9D6 -> true
  | 0x1F9D7 -> true
  | 0x1F9D8 -> true
  | 0x1F9D9 -> true
  | 0x1F9DA -> true
  | 0x1F9DB -> true
  | 0x1F9DC -> true
  | 0x1F9DD -> true
  | 0x261D  -> true
  | 0x26F7  -> true
  | 0x26F9  -> true
  | 0x270A  -> true
  | 0x270B  -> true
  | 0x270C  -> true
  | 0x270D  -> true
  | _       -> false


let is-alphabet n =
  match n with
  | 0x1F1E6 -> true
  | 0x1F1E7 -> true
  | 0x1F1E8 -> true
  | 0x1F1E9 -> true
  | 0x1F1EA -> true
  | 0x1F1EB -> true
  | 0x1F1EC -> true
  | 0x1F1ED -> true
  | 0x1F1EE -> true
  | 0x1F1EF -> true
  | 0x1F1F0 -> true
  | 0x1F1F1 -> true
  | 0x1F1F2 -> true
  | 0x1F1F3 -> true
  | 0x1F1F4 -> true
  | 0x1F1F5 -> true
  | 0x1F1F6 -> true
  | 0x1F1F7 -> true
  | 0x1F1F8 -> true
  | 0x1F1F9 -> true
  | 0x1F1FA -> true
  | 0x1F1FB -> true
  | 0x1F1FC -> true
  | 0x1F1FD -> true
  | 0x1F1FE -> true
  | 0x1F1FF -> true
  | _       -> false



let is-national-flag n m =
  match (n,m) with
  | (0x1F1E6, 0x1F1E8) -> true
  | (0x1F1E6, 0x1F1E9) -> true
  | (0x1F1E6, 0x1F1EA) -> true
  | (0x1F1E6, 0x1F1EB) -> true
  | (0x1F1E6, 0x1F1EC) -> true
  | (0x1F1E6, 0x1F1EE) -> true
  | (0x1F1E6, 0x1F1F1) -> true
  | (0x1F1E6, 0x1F1F2) -> true
  | (0x1F1E6, 0x1F1F4) -> true
  | (0x1F1E6, 0x1F1F6) -> true
  | (0x1F1E6, 0x1F1F7) -> true
  | (0x1F1E6, 0x1F1F8) -> true
  | (0x1F1E6, 0x1F1F9) -> true
  | (0x1F1E6, 0x1F1FA) -> true
  | (0x1F1E6, 0x1F1FC) -> true
  | (0x1F1E6, 0x1F1FD) -> true
  | (0x1F1E6, 0x1F1FF) -> true
  | (0x1F1E7, 0x1F1E6) -> true
  | (0x1F1E7, 0x1F1E7) -> true
  | (0x1F1E7, 0x1F1E9) -> true
  | (0x1F1E7, 0x1F1EA) -> true
  | (0x1F1E7, 0x1F1EB) -> true
  | (0x1F1E7, 0x1F1EC) -> true
  | (0x1F1E7, 0x1F1ED) -> true
  | (0x1F1E7, 0x1F1EE) -> true
  | (0x1F1E7, 0x1F1EF) -> true
  | (0x1F1E7, 0x1F1F1) -> true
  | (0x1F1E7, 0x1F1F2) -> true
  | (0x1F1E7, 0x1F1F3) -> true
  | (0x1F1E7, 0x1F1F4) -> true
  | (0x1F1E7, 0x1F1F6) -> true
  | (0x1F1E7, 0x1F1F7) -> true
  | (0x1F1E7, 0x1F1F8) -> true
  | (0x1F1E7, 0x1F1F9) -> true
  | (0x1F1E7, 0x1F1FB) -> true
  | (0x1F1E7, 0x1F1FC) -> true
  | (0x1F1E7, 0x1F1FE) -> true
  | (0x1F1E7, 0x1F1FF) -> true
  | (0x1F1E8, 0x1F1E6) -> true
  | (0x1F1E8, 0x1F1E8) -> true
  | (0x1F1E8, 0x1F1E9) -> true
  | (0x1F1E8, 0x1F1EB) -> true
  | (0x1F1E8, 0x1F1EC) -> true
  | (0x1F1E8, 0x1F1ED) -> true
  | (0x1F1E8, 0x1F1EE) -> true
  | (0x1F1E8, 0x1F1F0) -> true
  | (0x1F1E8, 0x1F1F1) -> true
  | (0x1F1E8, 0x1F1F2) -> true
  | (0x1F1E8, 0x1F1F3) -> true
  | (0x1F1E8, 0x1F1F4) -> true
  | (0x1F1E8, 0x1F1F5) -> true
  | (0x1F1E8, 0x1F1F7) -> true
  | (0x1F1E8, 0x1F1FA) -> true
  | (0x1F1E8, 0x1F1FB) -> true
  | (0x1F1E8, 0x1F1FC) -> true
  | (0x1F1E8, 0x1F1FD) -> true
  | (0x1F1E8, 0x1F1FE) -> true
  | (0x1F1E8, 0x1F1FF) -> true
  | (0x1F1E9, 0x1F1EA) -> true
  | (0x1F1E9, 0x1F1EC) -> true
  | (0x1F1E9, 0x1F1EF) -> true
  | (0x1F1E9, 0x1F1F0) -> true
  | (0x1F1E9, 0x1F1F2) -> true
  | (0x1F1E9, 0x1F1F4) -> true
  | (0x1F1E9, 0x1F1FF) -> true
  | (0x1F1EA, 0x1F1E6) -> true
  | (0x1F1EA, 0x1F1E8) -> true
  | (0x1F1EA, 0x1F1EA) -> true
  | (0x1F1EA, 0x1F1EC) -> true
  | (0x1F1EA, 0x1F1ED) -> true
  | (0x1F1EA, 0x1F1F7) -> true
  | (0x1F1EA, 0x1F1F8) -> true
  | (0x1F1EA, 0x1F1F9) -> true
  | (0x1F1EA, 0x1F1FA) -> true
  | (0x1F1EB, 0x1F1EE) -> true
  | (0x1F1EB, 0x1F1EF) -> true
  | (0x1F1EB, 0x1F1F0) -> true
  | (0x1F1EB, 0x1F1F2) -> true
  | (0x1F1EB, 0x1F1F4) -> true
  | (0x1F1EB, 0x1F1F7) -> true
  | (0x1F1EC, 0x1F1E6) -> true
  | (0x1F1EC, 0x1F1E7) -> true
  | (0x1F1EC, 0x1F1E9) -> true
  | (0x1F1EC, 0x1F1EA) -> true
  | (0x1F1EC, 0x1F1EB) -> true
  | (0x1F1EC, 0x1F1EC) -> true
  | (0x1F1EC, 0x1F1ED) -> true
  | (0x1F1EC, 0x1F1EE) -> true
  | (0x1F1EC, 0x1F1F1) -> true
  | (0x1F1EC, 0x1F1F2) -> true
  | (0x1F1EC, 0x1F1F3) -> true
  | (0x1F1EC, 0x1F1F5) -> true
  | (0x1F1EC, 0x1F1F6) -> true
  | (0x1F1EC, 0x1F1F7) -> true
  | (0x1F1EC, 0x1F1F8) -> true
  | (0x1F1EC, 0x1F1F9) -> true
  | (0x1F1EC, 0x1F1FA) -> true
  | (0x1F1EC, 0x1F1FC) -> true
  | (0x1F1EC, 0x1F1FE) -> true
  | (0x1F1ED, 0x1F1F0) -> true
  | (0x1F1ED, 0x1F1F2) -> true
  | (0x1F1ED, 0x1F1F3) -> true
  | (0x1F1ED, 0x1F1F7) -> true
  | (0x1F1ED, 0x1F1F9) -> true
  | (0x1F1ED, 0x1F1FA) -> true
  | (0x1F1EE, 0x1F1E8) -> true
  | (0x1F1EE, 0x1F1E9) -> true
  | (0x1F1EE, 0x1F1EA) -> true
  | (0x1F1EE, 0x1F1F1) -> true
  | (0x1F1EE, 0x1F1F2) -> true
  | (0x1F1EE, 0x1F1F3) -> true
  | (0x1F1EE, 0x1F1F4) -> true
  | (0x1F1EE, 0x1F1F6) -> true
  | (0x1F1EE, 0x1F1F7) -> true
  | (0x1F1EE, 0x1F1F8) -> true
  | (0x1F1EE, 0x1F1F9) -> true
  | (0x1F1EF, 0x1F1EA) -> true
  | (0x1F1EF, 0x1F1F2) -> true
  | (0x1F1EF, 0x1F1F4) -> true
  | (0x1F1EF, 0x1F1F5) -> true
  | (0x1F1F0, 0x1F1EA) -> true
  | (0x1F1F0, 0x1F1EC) -> true
  | (0x1F1F0, 0x1F1ED) -> true
  | (0x1F1F0, 0x1F1EE) -> true
  | (0x1F1F0, 0x1F1F2) -> true
  | (0x1F1F0, 0x1F1F3) -> true
  | (0x1F1F0, 0x1F1F5) -> true
  | (0x1F1F0, 0x1F1F7) -> true
  | (0x1F1F0, 0x1F1FC) -> true
  | (0x1F1F0, 0x1F1FE) -> true
  | (0x1F1F0, 0x1F1FF) -> true
  | (0x1F1F1, 0x1F1E6) -> true
  | (0x1F1F1, 0x1F1E7) -> true
  | (0x1F1F1, 0x1F1E8) -> true
  | (0x1F1F1, 0x1F1EE) -> true
  | (0x1F1F1, 0x1F1F0) -> true
  | (0x1F1F1, 0x1F1F7) -> true
  | (0x1F1F1, 0x1F1F8) -> true
  | (0x1F1F1, 0x1F1F9) -> true
  | (0x1F1F1, 0x1F1FA) -> true
  | (0x1F1F1, 0x1F1FB) -> true
  | (0x1F1F1, 0x1F1FE) -> true
  | (0x1F1F2, 0x1F1E6) -> true
  | (0x1F1F2, 0x1F1E8) -> true
  | (0x1F1F2, 0x1F1E9) -> true
  | (0x1F1F2, 0x1F1EA) -> true
  | (0x1F1F2, 0x1F1EB) -> true
  | (0x1F1F2, 0x1F1EC) -> true
  | (0x1F1F2, 0x1F1ED) -> true
  | (0x1F1F2, 0x1F1F0) -> true
  | (0x1F1F2, 0x1F1F1) -> true
  | (0x1F1F2, 0x1F1F2) -> true
  | (0x1F1F2, 0x1F1F3) -> true
  | (0x1F1F2, 0x1F1F4) -> true
  | (0x1F1F2, 0x1F1F5) -> true
  | (0x1F1F2, 0x1F1F6) -> true
  | (0x1F1F2, 0x1F1F7) -> true
  | (0x1F1F2, 0x1F1F8) -> true
  | (0x1F1F2, 0x1F1F9) -> true
  | (0x1F1F2, 0x1F1FA) -> true
  | (0x1F1F2, 0x1F1FB) -> true
  | (0x1F1F2, 0x1F1FC) -> true
  | (0x1F1F2, 0x1F1FD) -> true
  | (0x1F1F2, 0x1F1FE) -> true
  | (0x1F1F2, 0x1F1FF) -> true
  | (0x1F1F3, 0x1F1E6) -> true
  | (0x1F1F3, 0x1F1E8) -> true
  | (0x1F1F3, 0x1F1EA) -> true
  | (0x1F1F3, 0x1F1EB) -> true
  | (0x1F1F3, 0x1F1EC) -> true
  | (0x1F1F3, 0x1F1EE) -> true
  | (0x1F1F3, 0x1F1F1) -> true
  | (0x1F1F3, 0x1F1F4) -> true
  | (0x1F1F3, 0x1F1F5) -> true
  | (0x1F1F3, 0x1F1F7) -> true
  | (0x1F1F3, 0x1F1FA) -> true
  | (0x1F1F3, 0x1F1FF) -> true
  | (0x1F1F4, 0x1F1F2) -> true
  | (0x1F1F5, 0x1F1E6) -> true
  | (0x1F1F5, 0x1F1EA) -> true
  | (0x1F1F5, 0x1F1EB) -> true
  | (0x1F1F5, 0x1F1EC) -> true
  | (0x1F1F5, 0x1F1ED) -> true
  | (0x1F1F5, 0x1F1F0) -> true
  | (0x1F1F5, 0x1F1F1) -> true
  | (0x1F1F5, 0x1F1F2) -> true
  | (0x1F1F5, 0x1F1F3) -> true
  | (0x1F1F5, 0x1F1F7) -> true
  | (0x1F1F5, 0x1F1F8) -> true
  | (0x1F1F5, 0x1F1F9) -> true
  | (0x1F1F5, 0x1F1FC) -> true
  | (0x1F1F5, 0x1F1FE) -> true
  | (0x1F1F6, 0x1F1E6) -> true
  | (0x1F1F7, 0x1F1EA) -> true
  | (0x1F1F7, 0x1F1F4) -> true
  | (0x1F1F7, 0x1F1F8) -> true
  | (0x1F1F7, 0x1F1FA) -> true
  | (0x1F1F7, 0x1F1FC) -> true
  | (0x1F1F8, 0x1F1E6) -> true
  | (0x1F1F8, 0x1F1E7) -> true
  | (0x1F1F8, 0x1F1E8) -> true
  | (0x1F1F8, 0x1F1E9) -> true
  | (0x1F1F8, 0x1F1EA) -> true
  | (0x1F1F8, 0x1F1EC) -> true
  | (0x1F1F8, 0x1F1ED) -> true
  | (0x1F1F8, 0x1F1EE) -> true
  | (0x1F1F8, 0x1F1EF) -> true
  | (0x1F1F8, 0x1F1F0) -> true
  | (0x1F1F8, 0x1F1F1) -> true
  | (0x1F1F8, 0x1F1F2) -> true
  | (0x1F1F8, 0x1F1F3) -> true
  | (0x1F1F8, 0x1F1F4) -> true
  | (0x1F1F8, 0x1F1F7) -> true
  | (0x1F1F8, 0x1F1F8) -> true
  | (0x1F1F8, 0x1F1F9) -> true
  | (0x1F1F8, 0x1F1FB) -> true
  | (0x1F1F8, 0x1F1FD) -> true
  | (0x1F1F8, 0x1F1FE) -> true
  | (0x1F1F8, 0x1F1FF) -> true
  | (0x1F1F9, 0x1F1E6) -> true
  | (0x1F1F9, 0x1F1E8) -> true
  | (0x1F1F9, 0x1F1E9) -> true
  | (0x1F1F9, 0x1F1EB) -> true
  | (0x1F1F9, 0x1F1EC) -> true
  | (0x1F1F9, 0x1F1ED) -> true
  | (0x1F1F9, 0x1F1EF) -> true
  | (0x1F1F9, 0x1F1F1) -> true
  | (0x1F1F9, 0x1F1F2) -> true
  | (0x1F1F9, 0x1F1F3) -> true
  | (0x1F1F9, 0x1F1F4) -> true
  | (0x1F1F9, 0x1F1F7) -> true
  | (0x1F1F9, 0x1F1F9) -> true
  | (0x1F1F9, 0x1F1FB) -> true
  | (0x1F1F9, 0x1F1FC) -> true
  | (0x1F1F9, 0x1F1FF) -> true
  | (0x1F1FA, 0x1F1E6) -> true
  | (0x1F1FA, 0x1F1EC) -> true
  | (0x1F1FA, 0x1F1F2) -> true
  | (0x1F1FA, 0x1F1F3) -> true
  | (0x1F1FA, 0x1F1F8) -> true
  | (0x1F1FA, 0x1F1FE) -> true
  | (0x1F1FA, 0x1F1FF) -> true
  | (0x1F1FB, 0x1F1E6) -> true
  | (0x1F1FB, 0x1F1E8) -> true
  | (0x1F1FB, 0x1F1EA) -> true
  | (0x1F1FB, 0x1F1EC) -> true
  | (0x1F1FB, 0x1F1EE) -> true
  | (0x1F1FB, 0x1F1F3) -> true
  | (0x1F1FB, 0x1F1FA) -> true
  | (0x1F1FC, 0x1F1EB) -> true
  | (0x1F1FC, 0x1F1F8) -> true
  | (0x1F1FD, 0x1F1F0) -> true
  | (0x1F1FE, 0x1F1EA) -> true
  | (0x1F1FE, 0x1F1F9) -> true
  | (0x1F1FF, 0x1F1E6) -> true
  | (0x1F1FF, 0x1F1F2) -> true
  | (0x1F1FF, 0x1F1FC) -> true
  | _                  -> false



let is-square n = n == 0x20E3


let is-square-symbol n m =
  match (n,m) with
  | (0x23,0x20E3) -> true
  | (0x2A,0x20E3) -> true
  | (0x30,0x20E3) -> true
  | (0x31,0x20E3) -> true
  | (0x32,0x20E3) -> true
  | (0x33,0x20E3) -> true
  | (0x34,0x20E3) -> true
  | (0x35,0x20E3) -> true
  | (0x36,0x20E3) -> true
  | (0x37,0x20E3) -> true
  | (0x38,0x20E3) -> true
  | (0x39,0x20E3) -> true
  | _             -> false



let is-black-flag n = n == 0x1F3F4


let is-area-flag (s1,s2,s3,s4,s5,cancel-tag) =
  let is-small-letter n =
    (0xE0061 < n) && (n < 0xE007A)
  in
  if cancel-tag == 0xE007F then
    is-small-letter s1 &&
    is-small-letter s2 &&
    is-small-letter s3 &&
    is-small-letter s4 &&
    is-small-letter s5
  else
    false


let is-ZWJ lst =
  match lst with
  | [n] -> n == 0x200D
  | _   -> false

let is-variation-selectors lst =
  match lst with
  | [n] -> n == 0xFE0F
  | _   -> false


end
